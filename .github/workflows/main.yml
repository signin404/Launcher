name: Build C++ Launcher for Windows

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup MSVC Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1

    - name: Compile C++ code
      run: cl.exe /EHsc /O2 /D "UNICODE" /D "_UNICODE" launcher.cpp /Fe:launcher.exe /link Shlwapi.lib User32.lib
      # 我们假设输出文件就在根目录

    # 新增步骤 1: 查找构建产物
    # 这个步骤会递归搜索整个工作目录，找到 launcher.exe 并将其路径输出到一个名为 'exe-path' 的变量中
    # 即使 cl.exe 把文件生成到了某个子目录，这个步骤也能找到它
    - name: Find executable
      id: find_exe
      run: |
        $filePath = (Get-ChildItem -Recurse -Filter launcher.exe).FullName
        echo "Found executable at: $filePath"
        echo "exe-path=$filePath" >> $env:GITHUB_OUTPUT
      shell: pwsh

    # 修正步骤 2: 上传构建产物
    # 我们不再假设 launcher.exe 在根目录，而是直接使用上一步找到的完整路径
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: launcher-executable
        # 使用 'find_exe' 步骤输出的路径 (steps.find_exe.outputs.exe-path)
        path: ${{ steps.find_exe.outputs.exe-path }}
